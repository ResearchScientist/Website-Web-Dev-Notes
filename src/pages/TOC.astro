---
import MainLayout from '../layouts/MainLayout.astro';

// Get all markdown files
const foundNotes = import.meta.glob('./notes/**/*.md', { eager: true });
const allNotes = Object.values(foundNotes);
console.log(allNotes.length);

allNotes.forEach(note => {
  console.log(note.frontmatter.section);
});

// Get all unique chapters from the notes
const uniqueChapters = [...new Set(allNotes.map(note => note.frontmatter.section))];

// Group notes by chapter
const notesByChapter = allNotes.reduce((acc, note) => {
  const { chapter } = note.frontmatter;
  if (!acc[chapter]) {
    acc[chapter] = [];
  }
  acc[chapter].push(note);
  return acc;
}, {});

// Sort chapters based on their appearance in uniqueChapters
const sortedChapters = uniqueChapters.map(chapter => {
  return {
    name: chapter,
    notes: (notesByChapter[chapter] || []).sort((a, b) => {
      // If order property exists, use it for sorting
      if (a.frontmatter.order !== undefined && b.frontmatter.order !== undefined) {
        return a.frontmatter.order - b.frontmatter.order;
      }
      
      // Otherwise, sort by file path
      return a.file.localeCompare(b.file);
    })
  };
});

// Format chapter name for display
const formatChapterName = (name) => {
  return name
    .split('-')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
};
---

<MainLayout>
  <div class="container">
    <h1>All Notes</h1>
    <p>Browse through all available notes organized by chapter.</p>
    
    <div class="toc">
      {sortedChapters.map(chapter => (
        <div class="chapter">
          <h2>{formatChapterName(chapter.name)}</h2>
          <ul>
            {chapter.notes.map(note => (
              <li>
                <a href={note.url}>
                  {note.frontmatter.title}
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>
    
    <div class="back-link">
      <a href="/" class="button">Back to Home</a>
    </div>
  </div>
</Layout>

<style>
  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }
  
  h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #111827;
  }
  
  p {
    color: #4b5563;
    margin-bottom: 2rem;
  }
  
  .toc {
    background-color: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  
  .chapter {
    margin-bottom: 2rem;
  }
  
  .chapter:last-child {
    margin-bottom: 0;
  }
  
  h2 {
    font-size: 1.5rem;
    color: #111827;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid #e5e7eb;
  }
  
  ul {
    list-style-type: none;
    padding: 0;
  }
  
  li {
    margin-bottom: 0.5rem;
  }
  
  li a {
    display: block;
    padding: 0.5rem;
    color: #4f46e5;
    text-decoration: none;
    border-radius: 4px;
    transition: background-color 0.3s ease;
  }
  
  li a:hover {
    background-color: #f3f4f6;
  }
  
  .back-link {
    margin-top: 2rem;
    text-align: center;
  }
  
  .button {
    display: inline-block;
    padding: 0.5rem 1rem;
    background-color: #4f46e5;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    transition: background-color 0.3s ease;
  }
  
  .button:hover {
    background-color: #4338ca;
  }
</style>