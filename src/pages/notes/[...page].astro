---
console.log('process the page astro');
---

<!-- // import NotesLayout from '../../layouts/NotesLayout.astro'; -->
<!-- // import type { MarkdownInstance } from 'astro'; -->

<!-- // interface Frontmatter {
//   title: string;
//   slug?: string;
// }

// export async function getStaticPaths() {
//   console.log('static paths called');
//   const allNotes = await Astro.glob<MarkdownInstance<Frontmatter>>('../../pages/notes/**/*.md');
//     console.log('page astro notes length',allNotes.length);
//   return allNotes.map((note, index) => ({
//     params: { page: note.frontmatter.slug || index.toString() },
//     props: { 
//       note,
//       prevNote: index > 0 ? {
//         url: `/notes/${allNotes[index - 1].frontmatter.slug || (index - 1).toString()}`,
//         frontmatter: allNotes[index - 1].frontmatter
//       } : null,
//       nextNote: index < allNotes.length - 1 ? {
//         url: `/notes/${allNotes[index + 1].frontmatter.slug || (index + 1).toString()}`,
//         frontmatter: allNotes[index + 1].frontmatter
//       } : null
//     },
//   }));
// }

// const { note, prevNote, nextNote } = Astro.props;
// console.log('the page astro props are ', {note ,prevNote, nextNote});
// ---

// <NotesLayout frontmatter={note.frontmatter} prevNote={prevNote} nextNote={nextNote}>
//   <article set:html={note.compiledContent()} />
// </NotesLayout> -->





<!-- ---
// import NotesNavigation from '../../components/NotesNavigation.astro';
import NotesLayout from '../../layouts/NotesLayout.astro';

export async function getStaticPaths({ paginate }) {
  const allNotes = Object.values(import.meta.glob('../**/*.md', { eager: true }));
  return paginate(allNotes, { pageSize: 1 });
}

const { page } = Astro.props;
--- -->

<!-- <NotesNavigation currUrl={page.url.current} prevUrl={page.url.prev} nextUrl={page.url.next}/> -->
<!-- <NotesNavigation page={page} /> -->