---
import NotesLayout from '../../layouts/NotesLayout.astro';
import type { MarkdownInstance } from 'astro';

interface Frontmatter {
  title: string;
  slug?: string;
  // Add other frontmatter properties you use
}

export async function getStaticPaths() {
  const allNotes = await Astro.glob<MarkdownInstance<Frontmatter>>('../../pages/notes/**/*.md');

  return allNotes.map((note, index) => ({
    params: { page: note.frontmatter.slug || index.toString() },
    props: { 
      note,
      prevNote: index > 0 ? {
        url: `/notes/${allNotes[index - 1].frontmatter.slug || (index - 1).toString()}`,
        frontmatter: allNotes[index - 1].frontmatter
      } : null,
      nextNote: index < allNotes.length - 1 ? {
        url: `/notes/${allNotes[index + 1].frontmatter.slug || (index + 1).toString()}`,
        frontmatter: allNotes[index + 1].frontmatter
      } : null
    },
  }));
}

const { note, prevNote, nextNote } = Astro.props;
---

<NotesLayout frontmatter={note.frontmatter} prevNote={prevNote} nextNote={nextNote}>
  <article set:html={note.compiledContent()} />
</NotesLayout>

<!-- ---
// import NotesNavigation from '../../components/NotesNavigation.astro';
import NotesLayout from '../../layouts/NotesLayout.astro';

export async function getStaticPaths({ paginate }) {
  const allNotes = Object.values(import.meta.glob('../**/*.md', { eager: true }));
  return paginate(allNotes, { pageSize: 1 });
}

const { page } = Astro.props;
--- -->

<!-- <NotesNavigation currUrl={page.url.current} prevUrl={page.url.prev} nextUrl={page.url.next}/> -->
<!-- <NotesNavigation page={page} /> -->